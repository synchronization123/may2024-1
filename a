If you want to find a table name based on the presence of a specific value ('adfs' in your case) within any of its columns, you can modify the query to search for that value directly. Here's how you can do it:

```sql
SELECT DISTINCT TABLE_NAME
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_SCHEMA = 'your_database_name' -- Replace with your actual database name
  AND TABLE_NAME IN (
      SELECT TABLE_NAME
      FROM INFORMATION_SCHEMA.COLUMNS
      WHERE TABLE_SCHEMA = 'your_database_name' -- Replace with your actual database name
        AND COLUMN_TYPE LIKE '%char%' -- Adjust as needed to match your column types
        AND COLUMN_NAME IN (
            SELECT COLUMN_NAME
            FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = 'your_database_name' -- Replace with your actual database name
              AND TABLE_NAME = 'your_table_name' -- Optionally restrict to a specific table
              AND COLUMN_TYPE LIKE '%char%' -- Adjust as needed to match your column types
              AND COLUMN_NAME IN (
                  SELECT COLUMN_NAME
                  FROM your_table_name -- Replace with your actual table name
                  WHERE column_name LIKE '%adfs%'
              )
        )
  );
```

This query works as follows:

- The outer query (`SELECT DISTINCT TABLE_NAME FROM INFORMATION_SCHEMA.COLUMNS`) retrieves the table names where the value 'adfs' is present in at least one column.
- The inner query checks each column in each table (`INFORMATION_SCHEMA.COLUMNS`) within your database (`your_database_name`).
- Adjust `your_database_name` to your actual database name and `your_table_name` to the specific table name where you are searching for the value 'adfs'.